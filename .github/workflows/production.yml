name: Build and deploy JAR app to AWS EC2

env:
  APP_NAME: regional-delicacy-shop
  JAVA_VERSION: "21"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "corretto"
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests=true

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}
          path: "${{ github.workspace }}/target/*.jar"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
      EC2_USER: ${{ secrets.AWS_EC2_USER }}
      EC2_KEY: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy on AWS EC2
        run: |
          echo "Deploying to EC2 instance"

          echo "Copying files to EC2 instance"
          scp ./*.jar $EC2_USER@$EC2_HOST:/home/$EC2_USER/app.jar

          echo "Restarting server"
          ssh $EC2_USER@$EC2_HOST <<EOF
            set -e
            # Stop the existing server
            pkill -f 'app.jar' || true

            # Start the new server
            nohup java -jar /home/$EC2_USER/app.jar > app.log 2>&1 &
          EOF

          echo "Deployment complete"
